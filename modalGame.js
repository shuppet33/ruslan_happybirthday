import {modalGameState, modalState} from "./state.js";
import {drawScene} from "./index.js";


export const taskBox = {
    box1: [
        {
            text: '–í—ã—á–∏—Å–ª–∏—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å –º–∞—Ç—Ä–∏—Ü—ã:',
            img: 'img/tasks/math/1.jpg',
            answer: '2', // 2
            state: false
        },
        {
            text: '–í—ã—á–∏—Å–ª–∏—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª:',
            img: 'img/tasks/math/2.jpg',
            answer: '3', // 3
            state: false
        },
        {
            text: '–ù–∞–π–¥–∏—Ç–µ –ø—Ä–µ–¥–µ–ª: ',
            img: 'img/tasks/math/3.jpg',
            answer: '2', // 2
            state: false
        },
        {
            text: '–ù–∞–π–¥–∏—Ç–µ –ø—Ä–µ–¥–µ–ª:',
            img: 'img/tasks/math/4.jpg',
            answer: '1',
            state: false
        },
        {
            text: '–í—ã—á–∏—Å–ª–∏—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞–ª:',
            img: 'img/tasks/math/5.jpg',
            answer: '8', // 8
            state: false
        },
        {
            text: '–í —É—Ä–Ω–µ 3 –±–µ–ª—ã—Ö –∏ 2 —á–µ—Ä–Ω—ã—Ö —à–∞—Ä–∞. –°–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å 2 —à–∞—Ä–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–±–∞ –±—ã–ª–∏ –±–µ–ª—ã–º–∏?',
            img: '',
            answer: '3', // 3
            state: false
        },
        {
            text: '–ú–û–õ–û–î–ß–ò–ù–ö–ê!! –í–æ—Ç –∏ –ø–µ—Ä–≤—ã–π —Å—É–Ω–¥–æ—á–æ–∫ –æ—Ç–∫—Ä—ã—Ç.  <br> <br> –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî —Å–∫–∞–∂–∏ –µ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –∏ –ø–æ–ª—É—á–∏ –∑–∞—Å–ª—É–∂–µ–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫. <br> <br>üëâ –ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ: ¬´ <span style="color: red">–≠—à–∫–µ—Ä–µ</span> ¬ª',
            img: '',
            answer: '',
            state: null,
        },
    ],

    box2: [
        {
            text: '–ù—É–∂–µ–Ω –∫–æ–¥ –æ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.',
            img: '',
            answer: 'rm-rf/',
            state: false
        },
        {
            text: '–ú–æ–ª–æ–¥–µ—Ü! <br> <br>–®—É—Ç–∫–∞: <br> <br> –ü–æ—á–µ–º—É –≤ Linux –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ ¬´–û—Ç–º–µ–Ω–∞¬ª? –ü–æ—Ç–æ–º—É —á—Ç–æ –≤—Å—ë –¥–µ–ª–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ rm -rf /. <br> <br> ',
            img: '',
            answer: '',
            state: null
        }
    ],

    box3: [
        {
            text: '–ó–∞–¥–∞—á–∞ 1 ‚Äî –°—Ç—Ä–æ–∫–∞: —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–∏–º–≤–æ–ª–æ–≤. –ù—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ –Ω–µ-–±—É–∫–≤–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ –≤–µ—Ä–Ω—É—Ç—å —Å–∫–ª–µ–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –±—É–∫–≤. <br> <br> <span style="color: blue">function <span style="color: red">decodeStringFilterLetters <span style="color: black">( input: <span style="color: orange">string</span>) <span style="color: orange">string</span></span></span></span> <br> <br> –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: <br> <br> <span style="color: blue"> const <span style="color: black"> data = <span style="color: green">"H1a2p3p4y5B6i7r8t9h0d1a2y"</span></span></span>',
            img: '',
            answer: 'happybirthday',
            state: false
        },
        {
            text: '–ó–∞–¥–∞—á–∞ 2. –û–±—ä–µ–∫—Ç ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é <span style="color: blue">decodeObject ( data )</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç, –≥–¥–µ –∫–ª—é—á–∏ ‚Äî —ç—Ç–æ —Å–ª–æ–≤–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —á–∏—Å–ª–∞. –ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ 2, –≤ –ø–æ—Ä—è–¥–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è. <br> <br> –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: <br> <br> <span style="color: blue">const <span style="color: black"> data = \{ <span style="color: red">first</span>: <span style="color: red">3</span>, <span style="color: red">second</span>: <span style="color: red">5</span>, <span style="color: red">third</span>: <span style="color: red">1</span>, <span style="color: red">fourth</span>: <span style="color: red">0</span>  \} </span></span>',
            img: '',
            answer: '[3,5]', //[3,5]
            state: false
        },
        {
            text: '–ó–∞–¥–∞—á–∞ 3. –°—Ç—Ä–æ–∫–∞ ‚Äî —Ñ–∏–ª—å—Ç—Ä, –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Å–¥–≤–∏–≥ —Å–∏–º–≤–æ–ª–æ–≤. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é <span style="color: blue">decodeString ( data )</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—É—é —à–∏—Ñ—Ä–æ–º –¶–µ–∑–∞—Ä—è —Å–æ —Å–¥–≤–∏–≥–æ–º -3. –ù—É–∂–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. <br> <br>' +
                '–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' +
                '<br> <br>' +
                '<span style="color: blue">const <span style="color: black"> data = </span> <span style="color: green"> "kulwkdubfli" </span></span>',
            img: '',
            answer: 'birthdaygift', // birthdaygift
            state: false
        },
        {
            text: '–ó–∞–¥–∞—á–∞ 4. –í–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç ‚Äî —Ñ–∏–ª—å—Ç—Ä, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é <span style="color: blue">decodeObject ( data )</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç, –≥–¥–µ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º –∏ —á–∏—Å–ª–æ–º weight. –ù—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é weight –∏ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ —ç—Ç–∏—Ö —Ñ—Ä–∞–∑ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ù–æ —Ç—É—Ç –Ω–µ –≤—Å–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ... –°–ª–æ–≤–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã!<br> <br>' +
                '–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' +
                '<br> <br>' +
                '<span style="color: blue">const <span style="color: black"> data = \{ <br> ' +
                '<span style="color: red">phrase1</span> \{ <span style="color: red">text</span>: <span style="color: green">"x phqd"</span>, <span style="color: red">weight</span>: <span style="color: red">1</span> \}, <br> ' +
                '<span style="color: red">phrase2</span> \{ <span style="color: red">text</span>: <span style="color: green">"rw wdegd wuvdxfvw"</span>, <span style="color: red">weight</span>: <span style="color: red">3</span> \}, <br>' +
                '<span style="color: red">phrase2</span> \{ <span style="color: red">text</span>: <span style="color: green">"rw wdegb"</span>, <span style="color: red">weight</span>: <span style="color: red">2</span> \}, <br>' +
                ' \} </span></span>',
            img: '',
            answer: '["—É –º–µ–Ω—è","–æ—Ç —Ç–µ–±—è","—Ä—É–∫–∏ —Ç—Ä—è—Å—É—Ç—Å—è"]', // ["—É –º–µ–Ω—è","–æ—Ç —Ç–µ–±—è","—Ä—É–∫–∏ —Ç—Ä—è—Å—É—Ç—Å—è"]
            state: false
        },
        {
            text: '–ó–∞–¥–∞—á–∞ 5. –°—Ç—Ä–æ–∫–∏ ‚Äî —Å–¥–≤–∏–≥ –¶–µ–∑–∞—Ä—è + –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é <span style="color: blue">decodeString ( data , shifts )</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞ —à–∏—Ñ—Ä–æ–º –¶–µ–∑–∞—Ä—è, –∞ —á–∏—Å–ª–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–¥–≤–∏–≥. –ù—É–∂–Ω–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –∏ —Å–æ–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –≤–º–µ—Å—Ç–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É.<br> <br>' +
                '–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' +
                '<br> <br>' +
                '<span style="color: blue">const <span style="color: black"> data = [ <span style="color: green">"pdnh"</span>, <span style="color: green">"dzvkl"</span> ] </span> </span> <br>' +
                '<span style="color: blue">const <span style="color: black"> shifts = [ <span style="color: red">1</span>, <span style="color: red">-4</span> ] </span> </span> <br>',
            img: '',
            answer: 'makeawish', // makeawish
            state: false
        },
        {
            text: '–ó–∞–¥–∞—á–∞ 6. –ß–∏—Å–ª–æ ‚Äî —Ñ–∏–ª—å—Ç—Ä –∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–∏—Ñ—Ä. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é  <span style="color: blue">decodeNumber ( data )</span>, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞, —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ. <br> <br>' +
                '–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ' +
                '<br> <br>' +
                '<span style="color: blue">const <span style="color: black"> data = <span style="color: red">591482637</span> </span> </span>',
            img: '',
            answer: '2468', // 2468
            state: false
        },
        {
            text: '–ú–æ–ª–æ–¥–µ—Ü!!! <br> <br> –¢—ã —Ä–∞–∑–≥–∞–¥–∞–ª –≤—Å–µ —à–∏—Ñ—Ä—ã –∏ –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ –∑–∞–º–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Ç–µ–±–µ –Ω–∏–ø–æ—á—ë–º. <br> <br> –°–∫–∞–∂–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî ¬´ <span style="color: red">–ê–ª–æ—Ö–æ–º–æ—Ä–∞</span> ¬ª ‚Äî –∏ –ø–æ–ª—É—á–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫.',
            img: '',
            answer: '',
            state: null
        }
    ]
}

export function modalGame(box) {

    const modal = document.getElementById(box.name)
    const text = modal.querySelector('.box__content__text')
    const img = modal.querySelector('img')
    const input = modal.querySelector('input')
    const checkButton = modal.querySelector('.check')
    const closeButton = modal.querySelector('.close')
    const nextButton = modal.querySelector('.next-array')

    const checkWrapper = modal.querySelector('.box__content__check')

    let currentTask = 0

    renderTask()


    checkButton.addEventListener('click', (e) => {
        const task = taskBox[box.name][currentTask]

        if (input.value.replace(/\s/g, '') === task.answer) {
            task.state = true
            nextButton.classList.remove('hidden')
        } else {
            input.classList.add('error')
            setTimeout(() => input.classList.remove('error'), 3000)
        }
    })

    nextButton.addEventListener('click', (e) => {
        const task = taskBox[box.name][currentTask]

        currentTask++
        if (currentTask < taskBox[box.name].length) {
            renderTask()
        }
    })


    function renderTask() {
        const task = taskBox[box.name][currentTask]

        input.value = ''
        nextButton.classList.add('hidden')
        checkWrapper.classList.remove('hidden')
        closeButton.classList.add('hidden')

        text.innerHTML = task.text
        img.src = task.img

        if (task.state === null) {
            checkWrapper.classList.add('hidden')
            closeButton.classList.remove('hidden')
            return
        }
    }


}

export function openModal(box) {

    const modalBox = document.getElementById(box.name)
    const overlay = document.getElementById('overlay')
    const closeButton = modalBox.querySelector('.close')

    closeButton.removeEventListener('click', closeModal)

    if (modalGameState[box.name] === true) {
        return
    }

    modalBox.classList.remove('hidden')
    overlay.classList.remove('hidden')
    modalState[box.name] = true

    closeButton.addEventListener('click', closeModal)


    function closeModal(event) {
        modalBox.classList.add('hidden')
        overlay.classList.add('hidden')
        modalGameState[box.name] = true
        modalState[box.name] = false

        drawScene();
    }

}

